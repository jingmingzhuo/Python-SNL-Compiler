{ This program contains lots of semantic errors }

program program3
type t1 = integer;
     {t2 = tnotexist; TODO}             { Undefined Type }               { implemented }
var integer                  test1, test2;
    char                     ch;
    {array [5..15] of integer t1; TODO} { Invalid Array Definition }     { implemented }
    {array [15..5] of integer t1; TODO} { Invalid Array Definition }     { implemented }
                                 { Duplicated Identifier }        { implemented }

procedure proc(integer param1);
  var integer {param1, TODO}    { Duplicate Identifier }                 { implemented }
              param2;
              {proc; TODO}     { Duplicated Identifier }                 { implemented }
      char    param3;
  begin
    {notexist := param1; TODO} { Invalid Assignee }                      { implemented }
    {param3 := param2; TODO}   { Assign Type Mismatch }                  { implemented }
    param2 := 10        { Assign Type Mismatch }                  { implemented }
  end

procedure recordtest();
  var record
        integer fieldA, fieldB;
        array [0..10] of integer fieldArray;
      end
              rec1, rec2;
      char    testCh;
  begin
      write(rec1.fieldArray[5])
      {write(rec1.fieldArray2[5]); OK}      { Undefined Record Field } { implemented }
      {write(rec1.fieldArray[testCh])}   { Uncompatable Type }      { implemented }
  end

begin
  {proc(); OK}               { Call Parameter Count Mismatch }         { implemented }
  {proc(ch); OK}             { Call Parameter Type Mismatch }          { implemented }
  proc(0)
  {test1()}               { Unexpected Type }                       { implemented }
end.